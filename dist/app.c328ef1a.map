{"version":3,"sources":["../src/api.js","app.js"],"names":["Captcha","nbChar","myStr","text","i","charAt","Math","floor","random","length","r","g","b","ctx","str","x","y","ch","fillStyle","randomColor","fillText","measureText","width","randString","getRndString","sizeAndFont","canvas","document","createElement","getContext","font","charColor","window","onload","input","getElementById","btn","result","myCanvas","captcha","console","log","setupCanvas","appendChild","style","display","onclick","value","textContent"],"mappings":"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","file":"app.c328ef1a.map","sourceRoot":"..\\examples","sourcesContent":["export class Captcha {\r\n\r\n    constructor() {}\r\n\r\n    // nbChar : number of characters to be generated\r\n    // myStr : specify your own string\r\n    getRndString({nbChar = 5, myStr = \"ABCDEFGHIKLMNOPQRSTVXYZ123456789\"} = {}) {\r\n        let text = \"\";\r\n        for (let i = 0; i < nbChar; i++)\r\n            text += myStr.charAt(Math.floor(Math.random() * myStr.length));\r\n        return text;\r\n    }\r\n    \r\n    randomColor() {\r\n        let r = Math.floor(Math.random() * 256) ,\r\n            g = Math.floor(Math.random() * 256) ,\r\n            b = Math.floor(Math.random() * 256);\r\n        return `rgb(${r},${g},${b})`;\r\n    }\r\n\r\n    charColor(ctx, str, x, y) {        \r\n        for (let i = 0; i < str.length; i++) {\r\n            let ch = str.charAt(i);\r\n            ctx.fillStyle = this.randomColor();\r\n            ctx.fillText(ch, x, y);\r\n            x += ctx.measureText(ch).width;\r\n        }\r\n    }\r\n\r\n    // randString : random string generated by randomString()\r\n    // sizeAndFont : sepcify size of text (exp : 20px) & you can specify font-family (exmp : Arial)     \r\n    // x : The x coordinate where to start painting the text (relative to the canvas)\t\r\n    // y : The y coordinate where to start painting the text (relative to the canvas)\r\n    setupCanvas({\r\n        randString = this.getRndString() , \r\n        sizeAndFont = \"18px Arial\", x = 20, y = 20} = {}) {\r\n\r\n        let canvas = document.createElement('canvas') , ctx = canvas.getContext('2d');\r\n        ctx.font = sizeAndFont;\r\n        this.charColor(ctx, randString, x, y);\r\n        return canvas;\r\n    }\r\n    \r\n}","import { Captcha } from '../src/api';\r\n\r\nwindow.onload = () => {\r\n\r\n    let input = document.getElementById(\"input\") ,\r\n        btn = document.getElementById(\"btn\") ,\r\n        result = document.getElementById(\"result\") ,\r\n        myCanvas = document.getElementById(\"my-canvas\");\r\n\r\n    let captcha = new Captcha();        \r\n    let randString = captcha.getRndString({nbChar:3});\r\n\r\n    console.log(randString);\r\n\r\n    let canvas = captcha.setupCanvas({randString});\r\n    myCanvas.appendChild(canvas);\r\n\r\n    result.style.display = \"none\";\r\n    btn.onclick = () => {\r\n        if(input.value === randString) {\r\n            result.style.display = \"block\";\r\n            result.textContent = \"Good!\";\r\n        }else {\r\n            result.textContent = \"Bad!\"\r\n            result.style.display = \"block\";\r\n        }\r\n    }\r\n}"]}